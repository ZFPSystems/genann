# Project:   !Genann

# Toolflags:
CCFlags      = -depend !Depend -throwback -c -strict -fa -fh -ansi
C++Flags     = -depend !Depend -throwback -c
ObjAsmFlags  = -depend !Depend -throwback -NoCache
LinkFlags    = -aif -c++ -o $@
LibFileFlags = -c -o $@
GENAPCS      = -apcs 3

ifdef USEAPCS32
CCFlags     += -apcs 3/32/fpe3/swst/fp/nofpr -32 -D_RISCOS_BUILD32 -IC:
C++Flags    += -apcs 3/32/fpe3/swst/fp/nofpr -32 -D_RISCOS_BUILD32 -IC:
ObjAsmFlags += -apcs 3/32/fpe3/swst/fp/nofpr -32
GENAPCS     +=/32
ObjPostFix1 =32
endif

ifdef USEAPCS26
CCFlags     += -apcs 3/26/fpe2/swst/fp/nofpr -26 -D_RISCOS_BUILD26 \
	       -j<C/C++$Dir>.Export.APCS-26.Lib.clib.h.assert \
	       -I<C/C++$Dir>.Export.APCS-26.Lib.clib
C++Flags    += -apcs 3/26/fpe2/swst/fp/nofpr -26 -D_RISCOS_BUILD26 \
	       -I<C/C++$Dir>.Export.APCS-26.Lib.clib
GENAPCS     +=/26
ObjAsmFlags += -apcs 3/26/fpe2/swst/fp/nofpr
ObjPostFix1 =26
endif

ifdef USEARCH
CCflags     += -arch $(USEARCH)
C++Flags    += -arch $(USEARCH)
ObjPostFix2 +=ARMv$(USEARCH)
# Check specific Architectures:
#ifeq ("${USERARCH}","6")
#ECHO "Building for Arch: "$(USEARCH)
#endif
endif

ifdef USECPU
CCFlags     += -cpu $(USECPU)
C++Flags    += -cpu $(USECPU)
ObjAsmFlags += -cpu $(USECPU)
endif

ifdef OPTISPACE
CCFlags     += -Ospace
C++Flags    += -Ospace
else
CCFlags     += -Otime
C++Flags    += -Otime
endif

ifdef DDTDEBUG
CCFlags     += -gflv -IC:^.DDTLib
C++Flags    += -gflv -IC:^.DDTLib
LinkFlags   += --debug C:^.DDTLib.o.DDTLib
endif

ifdef DEBUG
CCFlags     += -DDEBUG
C++Flags    += -DDEBUG
endif

ifdef USERPF
USRPF       = $(USERPF)
endif

# Final targets:
clean ::
	@IfThere o.*	Then wipe @.o.* FR~C~V
	IfThere @.^.o.* Then wipe @.^.o.* FR~C~V

#@.^.o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF)
all: @.o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF)
           libfile $(LibFileFlags) @.o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF)
           copy @.o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF) @.^.o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF) ~CF~V

# User-editable dependencies:


# Static dependencies:
@.o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF): @.c.genann
          cc $(CCFlags) -o @.o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF) @.c.genann

# Dynamic dependencies:
o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF):	c.genann
o.genannDDE$(ObjPostFix1)$(ObjPostFix2)$(USRPF):	h.genann
o.genannDDE26ARMv2A2:	c.genann
o.genannDDE26ARMv2A2:	h.genann
o.genannDDE26ARMv2aA250:	c.genann
o.genannDDE26ARMv2aA250:	h.genann
o.genannDDE26ARMv2aA3:	c.genann
o.genannDDE26ARMv2aA3:	h.genann
o.genannDDE26ARMv3A610:	c.genann
o.genannDDE26ARMv3A610:	h.genann
o.genannDDE26ARMv3A710:	c.genann
o.genannDDE26ARMv3A710:	h.genann
o.genannDDE26ARMv4SA:	c.genann
o.genannDDE26ARMv4SA:	h.genann
o.genannDDE32ARMv7MM:	c.genann
o.genannDDE32ARMv7MM:	h.genann
o.genannDDE:	c.genann
o.genannDDE:	h.genann
o.genannDDE32ARMv5XS:	c.genann
o.genannDDE32ARMv5XS:	h.genann
o.genannDDE32ARMv6Pi1:	c.genann
o.genannDDE32ARMv6Pi1:	h.genann
o.genannDDE32ARMv7Pi2:	c.genann
o.genannDDE32ARMv7Pi2:	h.genann
o.genannDDE32Pi3:	c.genann
o.genannDDE32Pi3:	h.genann
o.genannDDE32ARMv7A9:	c.genann
o.genannDDE32ARMv7A9:	h.genann
